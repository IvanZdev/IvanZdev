html{-webkit-box-sizing:border-box;box-sizing:border-box}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}
 
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}body{background:#060204;color:#fff;overflow:hidden}body p{line-height:130%;letter-spacing:1px;font-size:18px;font-family:Roboto,"sans-serif"}body h1,body h2,body h3,body h4,body h5,body h6{font-family:Anton,sans-serif;letter-spacing:4px;font-weight:500}.wrapper{max-width:1440px;margin:0 auto;padding:0 30px}.title{margin-top:0;margin-bottom:30px}#page-scroll{position:relative}

/*! locomotive-scroll v4.1.1 | MIT License | https://github.com/locomotivemtl/locomotive-scroll */html.has-scroll-smooth{overflow:hidden}html.has-scroll-dragging{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.has-scroll-smooth body{overflow:hidden}.has-scroll-smooth [data-scroll-container]{min-height:100vh}[data-scroll-direction=horizontal] [data-scroll-container]{height:100vh;display:inline-block;white-space:nowrap}[data-scroll-direction=horizontal] [data-scroll-section]{display:inline-block;vertical-align:top;white-space:nowrap;height:100%}.c-scrollbar{position:absolute;right:0;top:0;width:11px;height:100%;-webkit-transform-origin:center right;transform-origin:center right;-webkit-transition:opacity .3s,-webkit-transform .3s;transition:opacity .3s,-webkit-transform .3s;transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s,-webkit-transform .3s;opacity:0}.c-scrollbar:hover{-webkit-transform:scaleX(1.45);transform:scaleX(1.45)}.c-scrollbar:hover,.has-scroll-dragging .c-scrollbar,.has-scroll-scrolling .c-scrollbar{opacity:1}[data-scroll-direction=horizontal] .c-scrollbar{width:100%;height:10px;top:auto;bottom:0;-webkit-transform:scaleY(1);transform:scaleY(1)}[data-scroll-direction=horizontal] .c-scrollbar:hover{-webkit-transform:scaleY(1.3);transform:scaleY(1.3)}.c-scrollbar_thumb{position:absolute;top:0;right:0;background:#d53744;opacity:.5;width:7px;border-radius:10px;margin:2px;cursor:-webkit-grab;cursor:grab}.has-scroll-dragging .c-scrollbar_thumb{cursor:-webkit-grabbing;cursor:grabbing}[data-scroll-direction=horizontal] .c-scrollbar_thumb{right:auto;bottom:0}.menu{display:-webkit-box;display:-ms-flexbox;display:flex;color:#fff;margin-top:10%;font-family:Anton,sans-serif}.menu .menu-content{list-style:none;border-left:1px solid #fff;padding:0;margin:0}.menu .menu-content li{display:block;padding:20px;font-size:32px;width:100%;position:relative;z-index:5}.menu .menu-content li,.menu .menu-content li:before{-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.menu .menu-content li:before{content:"";width:0;height:100%;top:0;left:0;background:#d53744;position:absolute;z-index:-3}.menu .menu-content li a{text-decoration:none;color:inherit;width:100%;height:100%;white-space:nowrap;padding:20px;letter-spacing:6px;font-size:36px;text-transform:uppercase}.menu .menu-content li:hover:before{width:100%}.menu .menu-content li:hover .st{background:#060204}.menu .menu-content li .st{background:#d53744;padding:5px;border-radius:3px;margin-right:3px;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.intro{display:inline-block;width:100%;height:100vh;background:url(../images/shadowmane.png) no-repeat 50%;background-size:cover;overflow:hidden}.community{display:block;color:#fff;margin-top:150px}.community .title-community{display:-webkit-box;display:-ms-flexbox;display:flex}@media only screen and (max-width:1380px){.community .title-community{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.community .title-community .title{padding-bottom:10px;border-bottom:1px solid #fff}.community .community-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media only screen and (max-width:1380px){.community .community-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.community .community-content .left-section{width:40%;max-width:500px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}@media only screen and (max-width:1380px){.community .community-content .left-section{width:100%;max-width:100%}}.community .community-content .right-section{width:auto}@media only screen and (max-width:1380px){.community .community-content .right-section{margin-top:200px;-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1}}.community .community-content .right-section .img-container{position:relative;max-width:800px;min-width:800px}@media only screen and (max-width:1380px){.community .community-content .right-section .img-container{min-width:auto}}.community .community-content .right-section .img-container .noglin{display:inline-block;position:absolute;top:-11rem;left:0}@media only screen and (max-width:1380px){.community .community-content .right-section .img-container .noglin{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}}.community .community-content .right-section .img-container .main-image{width:100%;height:auto}.community .community-content .icones{display:-webkit-box;display:-ms-flexbox;display:flex;padding-top:40px;margin-top:auto}.community .community-content .icones .discord{margin-right:50px}.team{margin-top:150px;margin-bottom:50px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media only screen and (max-width:1380px){.team{margin-top:100px}}.team .title-team{border-bottom:1px solid #fff;padding-bottom:10px}.team .text-team{max-width:60%}@media only screen and (max-width:1380px){.team .text-team{max-width:100%}}.swiper-container{max-width:1380px;height:100%;margin-bottom:150px}@media only screen and (max-width:1380px){.swiper-container{max-width:70%}}@media only screen and (max-width:700px){.swiper-container{max-width:50%}}.swiper-container .swiper-wrapper{padding-bottom:30px}.swiper-container .swiper-wrapper .swiper-slide h4{font-family:Roboto,"sans-serif";letter-spacing:2px;font-weight:500;height:50px}.swiper-container .swiper-wrapper .swiper-slide p{font-size:16px}.swiper-container .swiper-wrapper .swiper-slide img{width:100%;height:auto}.swiper-scrollbar{background:rgba(213,55,68,.2)}.swiper-scrollbar .swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:rgba(213,55,68,.8);border-radius:10px;left:0;top:0}.title-season{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:50px}.title-season .title{border-bottom:1px solid #fff;padding-bottom:10px;margin:0 auto}.season{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;margin-bottom:80px}@media only screen and (max-width:1381px){.season{-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.season .season-content{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}@media only screen and (max-width:1381px){.season .season-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.season .season-content .img-container{max-width:920px}.season .season-content .img-container img{width:100%;height:auto}.season .season-content .right-of-image{display:block;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-left:30px}@media only screen and (max-width:1381px){.season .season-content .right-of-image{margin-top:30px;margin-left:0}}.season .season-content .right-of-image p{max-width:480px;padding-top:10px;line-height:110%;letter-spacing:1px;font-size:18px;font-family:Roboto,"sans-serif";margin:0 0 10px}.season .season-content .right-of-image .btn-server{font-family:Roboto,"sans-serif";letter-spacing:1px;font-size:18px;display:block;margin:auto;border:1px solid #fff;border-radius:17px;padding:15px;cursor:pointer;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;color:inherit;text-decoration:none;margin-bottom:0!important}.season .season-content .right-of-image .btn-server span{padding-bottom:2px;border-bottom:1px solid #fff}.season .season-content .right-of-image .btn-server:hover{background:#d53744}.servers{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:150px;padding-top:30px}.servers img{width:auto}.servers .title{border-bottom:1px solid #fff;padding-bottom:10px}.servers .servers-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.servers .servers-content .server{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex:1;-ms-flex:1 50%;flex:1 50%;margin-bottom:10rem}.servers .servers-content .server img{margin-bottom:40px}.servers .servers-content .server-content{margin:0 50px;overflow:hidden}.footer-img{position:absolute;bottom:-10px;left:0;z-index:-1}.footer-img,.footer-img img{width:100%;height:auto}footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;background:rgba(0,0,0,.8);padding:0 50px;height:80px}.u-hidden-visually{border:0!important;clip:rect(0 0 0 0)!important;-webkit-clip-path:inset(50%)!important;clip-path:inset(50%)!important;height:1px!important;margin:-1px!important;overflow:hidden!important;padding:0!important;position:absolute!important;white-space:nowrap!important;width:1px!important}.u-hidden{display:none!important}@media print{.hidden-print{display:none!important}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
